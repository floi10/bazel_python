# # Load various rules so that we can have bazel download
# # various rulesets and dependencies.
# # The `load` statement imports the symbol for the rule, in the defined
# # ruleset. When the symbol is loaded you can use the rule.

# # The names @pip and @python_39 are values that are repository
# # names. Those names are defined in the MODULES.bazel file.
# load("@bazel_skylib//rules:build_test.bzl", "build_test")
# load("@pip//:requirements.bzl", "all_data_requirements", "all_requirements", "all_whl_requirements", "requirement")
# load("@python_3_9//:defs.bzl", py_test_with_transition = "py_test")
# load("@python_versions//3.9:defs.bzl", compile_pip_requirements_3_9 = "compile_pip_requirements")
# load("@rules_python//python:defs.bzl", "py_binary", "py_library", "py_test")

# # This stanza calls a rule that generates targets for managing pip dependencies
# # with pip-compile.
# compile_pip_requirements_3_9(
#     name = "requirements_3_9",
#     extra_args = ["--allow-unsafe"],
#     requirements_in = "requirements.in",
#     requirements_txt = "requirements.txt",
# )

# # The rules below are language specific rules defined in
# # rules_python. See
# # https://bazel.build/reference/be/python

# # see https://bazel.build/reference/be/python#py_library
# py_library(
#     name = "lib",
#     srcs = ["lib.py"],
#     deps = [
#         requirement("pylint"),
#         requirement("tabulate"),
#         requirement("python-dateutil"),
#     ],
# )



